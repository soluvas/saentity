/*
 * generated by Xtext
 */
package com.soluvas.saentity.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import net.danieldietrich.xtext.bifsa.IBiFileSystemAccess
import com.soluvas.saentity.saentity.Model
import com.soluvas.saentity.saentity.Entity
import org.eclipse.xtext.util.StringInputStream
import java.io.IOException
import net.danieldietrich.xtext.generator.protectedregions.RegionParserFactory
import net.danieldietrich.protectedregions.xtext.IBidiFileSystemAccess
import net.danieldietrich.protectedregions.core.RegionParserFactory
import net.danieldietrich.protectedregions.xtext.ProtectedRegionSupport
import org.slf4j.Logger
import org.slf4j.LoggerFactory

class SaentityJsfGenerator implements IGenerator {
	
	IFileSystemAccess fsa
	Logger logger
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		logger = LoggerFactory::getLogger(^class)
		this.fsa = fsa

	    for (content : resource.contents) {
	    	if (content instanceof Model) {
				var model = content as Model
				generateModel(model)
			}
		}
	}
	
	def generateModel(Model model) {
		for (entity : model.entities) {
			generateEntity(model.packageName, entity)
		}
	}
	
	def generateEntity(String packageName, Entity entity) {
		var fileName = entity.name.toLowerCase + "/" + "index.xhtml"
		logger.info("Generating {}", fileName)
		val generated = renderJsfList(packageName, entity)
		fsa.generateFile(fileName, "webapp", generated)
	}
	
	def renderJsfList(String packageName, Entity entity) {
		'''
		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
		<!-- Generated by Soluvas Saentity Generator (http://www.soluvas.com) -->
		<html xmlns="http://www.w3.org/1999/xhtml"
		      xmlns:ui="http://java.sun.com/jsf/facelets"
		      xmlns:h="http://java.sun.com/jsf/html"
		      xmlns:f="http://java.sun.com/jsf/core">
		
			<ui:composition template="/templates/common.xhtml">
					<ui:define name="pageTitle">Greeting to User</ui:define>
					<ui:define name="pageHeader">Greeting Page</ui:define>
					<ui:define name="body">
					«FOR attribute : entity.attributes»
						<p>«attribute.name»</p>
					«ENDFOR»
					</ui:define>
			</ui:composition>
		</html>
		'''
	}
	
	def String toCamelCase(String underscored) {
		StringUtils::camelCase(underscored)
	}

	def String toCamelCaseLower(String underscored) {
		StringUtils::camelCase(underscored).toFirstLower
	}
	
	def String toPath(String packageName) {
		packageName.replace('.', '/')
	}

}
